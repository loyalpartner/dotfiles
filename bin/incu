#!/bin/bash

incus_setup() {
  local remote=$1
  local cider=$2
  local project=${3:-"default"}
  local target="$HOME/.config/incus-instances.d"
  if [ ! -d $target ]; then
    mkdir -p $target
  fi

  target="$target/$remote-$project"

  echo "Setting up $remote $cider $project for $target"

  local selector='.[] |
    select(.state.status == "Running") |
    select(.state.network != null) |
    . as $container | .state.network | to_entries[] |
    select(.value.addresses != null) | .value.addresses[] |
    select(.family == "inet") |
    "\($container.name),\(.address)"'


  echo "" > $target
  mkdir ~/.ssh/config.d -p

  ssh_config="$HOME/.ssh/config.d/$remote-$project"
  echo "" > $ssh_config

  for line in $(incus list $remote: -c ns4 --format json --project $project | jq -r "$selector" | grep "$cider") ; do
    local host=$(echo "$line" | awk -F',' '{print $1}')
    local address=$(echo "$line" | awk -F',' '{print $2}')
    cat <<EOF >> $ssh_config
Host $host
  HostName $address
  User root
  Port 22
EOF

    echo "
$host() {
  # local user=\$(incus exec $remote:$host --user 1000  whoami 2>/dev/null || incus exec $remote:$host --user 0  whoami 2>/dev/null)
  # ssh \$user@$address \$@
  ssh $host \$@
}
${host}s() {
  incus start --project $project $remote:$host \$@
}

${host}r() {
  incus restart --project $project $remote:$host --force \$@
}

${host}g() {
  nohup incus console --project $project $remote:$host --type=vga \$@  > /dev/null 2>&1 &
}

${host}e() {
  incus exec --project $project $remote:$host bash
}
    " >> $target
  done
}

incus_setup cs "10.55" default &&
  incus_setup cs "10.23" k8s &&
  incus_setup cs "10.24" poc &&
  incus_setup cl "10.152"

