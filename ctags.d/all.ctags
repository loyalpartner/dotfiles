--c++-kinds=+p
--fields=+iaS
--extras=+q
--tag-relative=yes
--recurse=yes
--c-kinds=+defgpstux

--langmap=java:+.aj


--langmap=markdown:.md
--regex-markdown=/^(#[^#].*)/\1/method,function/
--regex-markdown=/^(##[^#].*)/\1/method,function/
--regex-markdown=/^(###[^#].{0,19})/\1/method,function/
--regex-markdown=/^(=[^=].*)/\1/v,variable/
--regex-markdown=/^(==[^=].*)/\1/v,variable/
--regex-markdown=/^(===[^=].{0,19})/\1/v,variable/


--langmap=Rust:.rs
--regex-Rust=/^[ \t]*(#\[[^\]]\][ \t]*)*(pub[ \t]+)?(extern[ \t]+)?("[^"]+"[ \t]+)?(unsafe[ \t]+)?fn[ \t]+([[:alnum:]_]+)/\6/method,function/
--regex-Rust=/^[ \t]*(pub[ \t]+)?(type|enum|struct|mod)[ \t]+([[:alnum:]_]+)/\3/v,variable/
--regex-Rust=/^[ \t]*macro_rules![ \t]+([[:alnum:]_]+)/\1/method,function/
--regex-Rust=/^[ \t]*(pub[ \t]+)?(static|const)[ \t]+(mut[ \t]+)?([[:alnum:]_]+)/\4/v,variable/
--regex-Rust=/^[ \t]*(pub[ \t]+)?(unsafe[ \t]+)?trait[ \t]+([[:alnum:]_]+)/\3/method,function/
--regex-Rust=/^[ \t]*(pub[ \t]+)?(unsafe[ \t]+)?impl([ \t\n]*<[^>]*>)?[ \t]+(([[:alnum:]_:]+)[ \t]*(<[^>]*>)?[ \t]+(for)[ \t]+)?([[:alnum:]_]+)/\5 \7 \8/method,function/

--regex-Lua=/^.*[ \t]*function[ \t]*([:alnum:]+):([:alnum:]+)/\2/method,function/
--regex-Lua=/^[ \t]*local[ \t]+([:alnum:]+)/\1/v,variable/
--regex-Lua=/^.*[ \t]*function[ \t]*([:alnum:]+)\.([:alnum:]+).*$/\2/method,function/
--regex-Lua=/^.*[ \t]*function[ \t]*([:alnum:]+)[ \t]*\(/\1/method,function/
--regex-Lua=/^[ \t]*([:alnum:]+)[ \t]*=[ \t]*\{/\1/method,function/
--regex-Lua=/^[ \t]*module[ \t]+([:alnum:]+)\/\1/method,function/
--regex-Lua=/^[ \t]*module[ \t]+[[:alnum:]._]+\.([:alnum:]+)\/\1/method,function/

--langmap=html:.htm.html.erb.cmp.page.component
--regex-html=/[ \t]+ng-(controller|click|change|show|if|blur|focus|disabled|repeat)[ \t]*=[ \t]*['"][^[:alnum:]$]*([[:alnum:]$]{4,})/\2/a/
--regex-html=/[ \t]+<(app-[[:alnum:]$-_]{3,})/\1/a/
--regex-html=/[ \t]+on-([[:alnum:]_$-]+)=['"]([[:alnum:]_$]+)/\2/a/

--regex-c=/[ \t]*DEFUN[ \t]*\([ \t]*"([^"]+)",.*/\1/method,function/

--langdef=less
--langmap=less:.less
--regex-less=/^[ \t]*[\.#]([[:alnum:]_-]+)/\1/v,variable/
--regex-less=/^[ \t]*\(([[:alnum:]_-]+[ \t,]+)\{/\1/v,variable/
--regex-less=/^[ \t]*@media[ \t]+([[:alnum:]_-]+)/\1/v,variable/

#--langmap=css:.css
#--regex-css=/^[ \t]*\.?([[:alnum:]_:\\-]+)[ \t]*\{[ \t]*$/\1/v,variable/
#--regex-css=/^[ \t]*\.?[[:alnum:]_:\\-]+,[ \t]*\.?([[:alnum:]_:\\-]+)\{[ \t]*$/\1/v,variable/
#--regex-css=/^[ \t]*\.?[[:alnum:]_:\\-]+,[ \t]*\.?[[:alnum:]_:\\-]+,[ \t]*\.?([[:alnum:]_:\\-]+)\{[ \t]*$/\1/v,variable/
#--regex-css=/^[ \t]*@define-mixin[ \t]+([^ ]+)/\1/method,function/

#--langdef=scss
#--langmap=scss:.scss.sass
#--regex-scss=/^[ \t]*@mixin ([[:alnum:]_-]+)/\1/method,function/
#--regex-scss=/^[ \t]*\$([[:alnum:]_-]+)/\1/v,variable/
#--regex-scss=/^[ \t]*\.([[:alnum:]_-]+)/\1/v,variable/
#--regex-scss=/^[ \t]*&\.([[:alnum:]_-]+)/\1/v,variable/
#--regex-scss=/^[ \t]*#([[:alnum:]_-]+)/#\1/v,variable/
#--regex-scss=/^[ \t]*(([[:alnum:]_-]+[ \t\n,]+)+)\{/\1/v,variable/
#--regex-scss=/^[ \t]*@media[ \t]+([[:alnum:]_-]+)/\1/v,variable/

--langmap=ruby:+.rake
--regex-ruby=/(^|[:;])[ \t]*([:upper:][[:alnum:]_]+) *=/\2/v,variable/
--regex-ruby=/(^|;)[ \t]*(has_many|belongs_to|has_one|has_and_belongs_to_many)\(? *:([[:alnum:]_]+)/\3/method,function/
--regex-ruby=/(^|;)[ \t]*(named_)?scope\(? *:([[:alnum:]_]+)/\3/method,function/
--regex-ruby=/(^|;)[ \t]*expose\(? *:([[:alnum:]_]+)/\2/method,function/
--regex-ruby=/(^|;)[ \t]*event\(? *:([[:alnum:]_]+)/\2/method,function/
--regex-ruby=/(^|;)[ \t]*event\(? *:([[:alnum:]_]+)/\2!/method,function/
--regex-ruby=/(^|;)[ \t]*event\(? *:([[:alnum:]_]+)/\2?/method,function/

--langdef=ini
--langmap=ini:.ini
--regex-ini=/^[ \t]*\[(.*)\]/\1/v,variable/
--regex-ini=/^[ \t]*([^=]+)=(.*)/\1/v,variable/


--regex-fortran=/^[ \t]*MODULE[ \t]+(PROCEDURE|SUBROUTINE)[ \t]+([[:alnum:]_]+)/\2/method,function/

--langdef=orgmode
--langmap=orgmode:.org
--regex-orgmode=/<<([^>]+)>>/\1/v,variable/

